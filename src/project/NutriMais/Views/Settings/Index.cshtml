@model IEnumerable<NutriMais.Models.UserModel>

@{
    ViewData["Title"] = "Configurações";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 text-center">
        <form>
            <div class="mb-3">
                <div class="justify-content-end center-flex">
                    <a asp-action="Alterar">
                        <button class="btn btn-outline-secondary me-2" type="button">Alterar Cadastro</button>
                    </a>
                </div>

            </div>
            <div style="margin:20px">
                <div class="justify-content-end center-flex">
                    <a href="/Identity/Account/Manage/ChangePassword">
                        <button class="btn btn-outline-secondary me-2" type="button">Alterar Senha</button>
                    </a>
                </div>
            </div>
            <div class="mb-3">
                <div class="justify-content-end center-flex">
                    <a asp-action="Desativar">
                        <button class="btn btn-outline-secondary me-2" data-toggle="modal" type="button">Desativar Conta</button>
                    </a>
                </div>
            </div>
            @if (((UserModel) ViewData["User"]).ENutricionista)
            {
                <div class="mb-3">
                    <div class="justify-content-end center-flex">
                        <a asp-action="VincularNutri">
                            <button class="btn btn-outline-secondary me-2" type="button">Gerenciar Pacientes</button>
                        </a>
                    </div>
                </div>
            }
        </form>
    </div>
    <div class="col-md-7">
        <div id="calendar" style="max-height: 613px;"></div>
    </div>
</div>
@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    document.addEventListener("DOMContentLoaded", () => {
        mount();
    });

    function mount() {
        mountTooltips();
        mountModal();
        mountShow();
    }

    function mountModal() {
        window.EDIT_MODAL = null;
        const element = document.querySelector('#edit-modal');
        if (element !== null) {
            window.EDIT_MODAL = new bootstrap.Modal(element)
            element.addEventListener('hidden.bs.modal', () => {
                const input = element.querySelector('input');
                if (input) {
                    input.value = '';
                }
            })
        }
    }

    function mountTooltips() {
        document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(element => {
            return new bootstrap.Tooltip(element)
        })
    }

    function mountShow() {
        document.querySelectorAll('#confirmed-appointments tbody tr').forEach(element => {
            element.onmousedown = showAppointment
        })
    }

    function show(key) {
        const modal = window.EDIT_MODAL;
        if (modal) {
            const title = modal._element.querySelector('.modal-title');
            const editReason = modal._element.querySelector('#edit-reason');
            if (title && editReason) {
                title.innerText = getEditTitle(key);
                editReason.innerText = getEditReason(key);
            }

            modal.show();
        }
    }

    function getEditTitle(key) {
        const TITLE_ENUM = {
            reschedule: 'Editar Consulta',
            refuse: 'Recusar Consulta',
            cancel: 'Cancelar Consulta',
        }

        return TITLE_ENUM[key] ? TITLE_ENUM[key] : 'Editar Consulta'
    }

    function getEditReason(key) {
        const REASON_ENUM = {
            reschedule: 'do reagendamento',
            refuse: 'da recusa',
            cancel: 'do cancelamento',
        }

        return REASON_ENUM[key] ? REASON_ENUM[key] : 'da edi��o'
    }

    function showAppointment(event) {
        const MOUSE_BUTTONS = {
            LEFT_CLICK: 0,
            MIDDLE_CLICK: 1,
            RIGHT_CLICK: 2
        }

        if (isClickable(event.target) && event.button < MOUSE_BUTTONS.RIGHT_CLICK) {
            event.preventDefault();
            if (event.button === MOUSE_BUTTONS.LEFT_CLICK) {
                window.location = './show.html'
                return;
            }
            window.open('./show.html', 'blank')
        }
    }

    function isClickable(element) {
        if (element.classList.contains('clickable')) {
            return true;
        }

        if (element.classList.contains('not-clickable')) {
            return false;
        }

        return element.parentNode === null ? false : isClickable(element.parentNode);
    }

</script>

}